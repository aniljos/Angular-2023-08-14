{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { interval } from 'rxjs';\nimport { filter, map, take, tap, debounceTime } from 'rxjs/operators';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class SearchComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //interval create a observable with an infinite sequesce of numbers\n    // subscribe to get the output\n    interval(1000).pipe(take(10),\n    // to pick the first 10\n    tap(value => console.log(\"in tap\", value)),\n    // view the value\n    //filter(v => v % 2 === 0),\n    filter(function (v) {\n      return v % 2 === 0;\n    }), map(v => v * v));\n    // .subscribe((result) => {\n    //   console.log(\"in subscribe\", result);\n    // });\n    this.formGroup = new FormGroup({\n      search: new FormControl(\"\", [], [])\n    });\n    this.formGroup.get(\"search\")?.valueChanges.pipe(debounceTime(1000)).subscribe(input => {\n      //console.log(\"input\", input);\n      const url = \"https://en.wikipedia.org/w/api.php\";\n      const params = new HttpParams().set(\"action\", \"opensearch\").set(\"limit\", 20).set(\"origin\", \"*\").set(\"search\", input);\n      httpClient.get(url, {\n        params,\n        observe: 'response'\n      }).subscribe(data => {\n        console.log(data);\n      });\n    });\n  }\n}\n_class = SearchComponent;\n_class.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-search\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [\"type\", \"search\", \"placeholder\", \"Wiki Search\", \"formControlName\", \"search\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h4\");\n      i0.ɵɵtext(1, \"Wiki Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵelement(3, \"input\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n    }\n  },\n  dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AACvD,SAAQC,QAAQ,QAAO,MAAM;AAC7B,SAAQC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,YAAY,QAAO,gBAAgB;AACnE,SAAoBC,UAAU,QAAO,sBAAsB;;;;AAO3D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE5B;IACA;IACIT,QAAQ,CAAC,IAAI,CAAC,CACXU,IAAI,CACHP,IAAI,CAAC,EAAE,CAAC;IAAE;IACVC,GAAG,CAACO,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC,CAAC;IAAE;IAC5C;IACAV,MAAM,CAAC,UAASa,CAAC;MACf,OAAOA,CAAC,GAAG,CAAC,KAAI,CAAC;IACnB,CAAC,CAAC,EACFZ,GAAG,CAACY,CAAC,IAAIA,CAAC,GAAGA,CAAC,CAAC,CAChB;IACD;IACA;IACA;IAGL,IAAI,CAACC,SAAS,GAAG,IAAIhB,SAAS,CAAC;MAC5BiB,MAAM,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;KACpC,CAAC;IAEF,IAAI,CAACiB,SAAS,CACNE,GAAG,CAAC,QAAQ,CAAC,EACZC,YAAY,CACbR,IAAI,CACHL,YAAY,CAAC,IAAI,CAAC,CACnB,CACAc,SAAS,CAACC,KAAK,IAAG;MACjB;MAEA,MAAMC,GAAG,GAAG,oCAAoC;MAChD,MAAMC,MAAM,GAAG,IAAIhB,UAAU,EAAE,CACRiB,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAC3BA,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAChBA,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAClBA,GAAG,CAAC,QAAQ,EAAEH,KAAK,CAAC;MAE3CX,UAAU,CACLQ,GAAG,CAACI,GAAG,EAAE;QAACC,MAAM;QAAEE,OAAO,EAAE;MAAU,CAAC,CAAC,CACvCL,SAAS,CAAEM,IAAI,IAAI;QAClBb,OAAO,CAACC,GAAG,CAACY,IAAI,CAAC;MACnB,CAAC,CAAC;IAIR,CAAC,CAAC;EAEZ;;SArDWlB,eAAe;;mBAAfA,MAAe;AAAA;;QAAfA,MAAe;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BC,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MAEpBA,8BAA6B;MACzBA,2BAAyE;MAC7EA,iBAAM;;;MAFDA,eAAuB;MAAvBA,yCAAuB","names":["FormControl","FormGroup","interval","filter","map","take","tap","debounceTime","HttpParams","SearchComponent","constructor","httpClient","pipe","value","console","log","v","formGroup","search","get","valueChanges","subscribe","input","url","params","set","observe","data","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Applications\\Angular\\Timins\\the-awesome-app\\src\\app\\search\\search.component.ts","D:\\Applications\\Angular\\Timins\\the-awesome-app\\src\\app\\search\\search.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {interval} from 'rxjs';\nimport {filter, map, take, tap, debounceTime} from 'rxjs/operators';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent {\n\n  public formGroup: FormGroup;\n\n  constructor(private httpClient: HttpClient){\n\n    //interval create a observable with an infinite sequesce of numbers\n    // subscribe to get the output\n        interval(1000)\n          .pipe(\n            take(10), // to pick the first 10\n            tap(value => console.log(\"in tap\", value)), // view the value\n            //filter(v => v % 2 === 0),\n            filter(function(v){\n              return v % 2 ===0\n            }),\n            map(v => v * v)\n          )\n          // .subscribe((result) => {\n          //   console.log(\"in subscribe\", result);\n          // });\n\n\n     this.formGroup = new FormGroup({\n        search: new FormControl(\"\", [], [])\n     });    \n\n     this.formGroup\n            .get(\"search\")\n            ?.valueChanges\n            .pipe(\n              debounceTime(1000)\n            )\n            .subscribe(input => {\n              //console.log(\"input\", input);\n\n              const url = \"https://en.wikipedia.org/w/api.php\";\n              const params = new HttpParams()\n                                    .set(\"action\", \"opensearch\")\n                                    .set(\"limit\", 20)\n                                    .set(\"origin\", \"*\")\n                                    .set(\"search\", input);\n\n              httpClient\n                  .get(url, {params, observe: 'response'})\n                  .subscribe((data) => {\n                    console.log(data);\n                  })\n\n\n\n            })\n\n  }\n}\n","<h4>Wiki Search</h4>\n\n<div [formGroup]=\"formGroup\">\n    <input type=\"search\" placeholder=\"Wiki Search\" formControlName=\"search\"/>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}